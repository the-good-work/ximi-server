{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "XIMI Server API",
    "description": "API documentation list for project XIMI"
  },
  "servers": [
    {
      "url": "https://server.ximi.network/"
    }
  ],
  "tags": [
    {
      "name": "Rooms",
      "description": "List of endpoints related to room"
    }
  ],
  "paths": {
    "/livekit-webhook": {
      "post": {
        "tags": [
          "Webhook"
        ],
        "description": "Handle api request sent from livekit",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Webhook event triggered success"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Webhook event triggered success"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "Internal server error"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/rooms/create": {
      "post": {
        "tags": [
          "Rooms"
        ],
        "description": "Send a request to create a new room",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "create room suuccess"
                    },
                    "token": {
                      "type": "string",
                      "example": "<token_value>"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "create room suuccess"
                    },
                    "token": {
                      "type": "string",
                      "example": "<token_value>"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/MaximumRoomErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/InvalidRoomErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoomRequest"
              }
            }
          }
        }
      }
    },
    "/rooms/list": {
      "get": {
        "tags": [
          "Rooms"
        ],
        "description": "Send a request to fetch list of available rooms",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Get list room success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "room": {
                            "type": "string",
                            "example": "<room_name>"
                          },
                          "participants": {
                            "type": "number",
                            "example": 2
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Get list room success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "room": {
                            "type": "string",
                            "example": "<room_name>"
                          },
                          "participants": {
                            "type": "number",
                            "example": 2
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rooms/validate-name": {
      "post": {
        "tags": [
          "Rooms"
        ],
        "description": "Send a request to validate participant nickname availability",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Validate name success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "available": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Validate name success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "available": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateNameRequest"
              }
            }
          }
        }
      }
    },
    "/rooms/validate-passcode": {
      "post": {
        "tags": [
          "Rooms"
        ],
        "description": "Send a request to validate room passcode for joining a room. If the passcodeis correct, it will generate token with type\\'s metadata",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Validate passcode success"
                    },
                    "token": {
                      "type": "string",
                      "example": "<token_value>"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Validate passcode success"
                    },
                    "token": {
                      "type": "string",
                      "example": "<token_value>"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/IncorrectPasscodeErrorResponse"
                    },
                    {
                      "$ref": "#/components/schemas/RoomNotExistErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidatePasscodeRequest"
              },
              "examples": {
                "PERFORMER": {
                  "$ref": "#/components/examples/ValidatePasscodePerformerRequest"
                },
                "CONTROL": {
                  "$ref": "#/components/examples/ValidatePasscodeControlRequest"
                },
                "OUTPUT": {
                  "$ref": "#/components/examples/ValidatePasscodeOutputRequest"
                }
              }
            }
          }
        }
      }
    },
    "/rooms/retrieve-room": {
      "post": {
        "tags": [
          "Rooms"
        ],
        "description": "Send a request to fetch the room state for performer participant",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Get room state success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "USER1"
                        },
                        "type": {
                          "type": "string",
                          "example": "PERFORMER"
                        },
                        "audioMixMute": {
                          "type": "array",
                          "example": [
                            ""
                          ],
                          "items": {
                            "type": "string"
                          }
                        },
                        "audioOutputDelay": {
                          "type": "number",
                          "example": 0
                        },
                        "video": {
                          "type": "object",
                          "properties": {
                            "slots": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "nickname": {
                                    "type": "string",
                                    "example": "slot1"
                                  },
                                  "size": {
                                    "type": "object",
                                    "properties": {
                                      "x": {
                                        "type": "number",
                                        "example": 0
                                      },
                                      "y": {
                                        "type": "number",
                                        "example": 0
                                      }
                                    }
                                  },
                                  "position": {
                                    "type": "object",
                                    "properties": {
                                      "x": {
                                        "type": "number",
                                        "example": 0
                                      },
                                      "y": {
                                        "type": "number",
                                        "example": 0
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "layout": {
                          "type": "string",
                          "example": "Default"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Get room state success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "USER1"
                        },
                        "type": {
                          "type": "string",
                          "example": "PERFORMER"
                        },
                        "audioMixMute": {
                          "type": "array",
                          "example": [
                            ""
                          ],
                          "items": {
                            "type": "string"
                          }
                        },
                        "audioOutputDelay": {
                          "type": "number",
                          "example": 0
                        },
                        "video": {
                          "type": "object",
                          "properties": {
                            "slots": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "nickname": {
                                    "type": "string",
                                    "example": "slot1"
                                  },
                                  "size": {
                                    "type": "object",
                                    "properties": {
                                      "x": {
                                        "type": "number",
                                        "example": 0
                                      },
                                      "y": {
                                        "type": "number",
                                        "example": 0
                                      }
                                    }
                                  },
                                  "position": {
                                    "type": "object",
                                    "properties": {
                                      "x": {
                                        "type": "number",
                                        "example": 0
                                      },
                                      "y": {
                                        "type": "number",
                                        "example": 0
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "layout": {
                          "type": "string",
                          "example": "Default"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetrieveRoomRequest"
              }
            }
          }
        }
      }
    },
    "/rooms/apply-setting": {
      "patch": {
        "tags": [
          "Rooms"
        ],
        "description": "Send a request to apply performer\\'s setting",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Apply setting success"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Apply setting success"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Room does not exist"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Room does not exist"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {},
              "examples": {
                "MUTE": {
                  "$ref": "#/components/examples/ApplySettingMuteRequest"
                },
                "UNMUTE": {
                  "$ref": "#/components/examples/ApplySettingUnmuteRequest"
                },
                "DELAY": {
                  "$ref": "#/components/examples/ApplySettingDelayRequest"
                },
                "LAYOUT": {
                  "$ref": "#/components/examples/ApplySettingLayoutRequest"
                }
              }
            }
          }
        }
      }
    },
    "/room/edit-preset": {
      "patch": {
        "tags": [
          "Rooms"
        ],
        "description": "Send a request to save/load a preset",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Edit preset success"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Edit preset success"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Room does not exist"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Room does not exist"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {},
              "examples": {
                "SAVE_PRESET": {
                  "$ref": "#/components/examples/EditPresetSaveRequest"
                },
                "LOAD_PRESET": {
                  "$ref": "#/components/examples/EditPresetLoadRequest"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "examples": {
      "EditPresetSaveRequest": {
        "value": {
          "type": "SAVE_PRESET",
          "room_name": "MYROOM",
          "preset": {
            "index": 0,
            "name": "PRESET1",
            "participants": [
              {
                "sid": "<sid>",
                "name": "USER1",
                "type": "PERFORMER",
                "audioMixMute": [],
                "audioOutDelay": 0,
                "video": {
                  "slots": [
                    {
                      "nickname": "USER1",
                      "size": {
                        "x": 0,
                        "y": 0
                      },
                      "position": {
                        "x": 0,
                        "y": 0
                      }
                    }
                  ],
                  "layout": "Default"
                }
              }
            ]
          }
        }
      },
      "EditPresetLoadRequest": {
        "value": {
          "type": "LOAD_PRESET",
          "room_name": "MYROOM",
          "index": 0
        }
      },
      "ApplySettingMuteRequest": {
        "value": {
          "type": "MUTE_AUDIO",
          "room_name": "MYROOM",
          "participant": "USER1",
          "target": "USER2"
        }
      },
      "ApplySettingUnmuteRequest": {
        "value": {
          "type": "UNMUTE_AUDIO",
          "room_name": "MYROOM",
          "participant": "USER1",
          "target": "USER2"
        }
      },
      "ApplySettingDelayRequest": {
        "value": {
          "type": "UPDATE_DELAY",
          "room_name": "MYROOM",
          "participant": "USER1",
          "delay": 0
        }
      },
      "ApplySettingLayoutRequest": {
        "value": {
          "type": "UPDATE_LAYOUT",
          "room_name": "MYROOM",
          "participant": "USER1",
          "layout": "Default",
          "slots": [
            {
              "nickname": "slot1",
              "size": {
                "x": 0,
                "y": 0
              },
              "position": {
                "x": 0,
                "y": 0
              }
            }
          ]
        }
      },
      "ValidatePasscodePerformerRequest": {
        "value": {
          "room_name": "MYROOM",
          "participant_name": "USER1",
          "participant_type": "PERFORMER",
          "passcode": "12345"
        }
      },
      "ValidatePasscodeControlRequest": {
        "value": {
          "room_name": "MYROOM",
          "participant_type": "CONTROL",
          "passcode": "12345"
        }
      },
      "ValidatePasscodeOutputRequest": {
        "value": {
          "room_name": "MYROOM",
          "participant_type": "OUTPUT",
          "performer_target": "USER1",
          "passcode": "12345"
        }
      }
    },
    "schemas": {
      "RetrieveRoomRequest": {
        "type": "object",
        "properties": {
          "room_name": {
            "type": "string",
            "example": "MYROOM"
          },
          "participant_name": {
            "type": "string",
            "example": "USER1"
          }
        },
        "xml": {
          "name": "RetrieveRoomRequest"
        }
      },
      "CreateRoomRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "MYROOM"
          },
          "passcode": {
            "type": "string",
            "example": "12345"
          }
        },
        "xml": {
          "name": "CreateRoomRequest"
        }
      },
      "ValidateNameRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "USER1"
          }
        },
        "xml": {
          "name": "ValidateNameRequest"
        }
      },
      "ValidatePasscodeRequest": {
        "type": "object",
        "properties": {
          "room_name": {
            "type": "string",
            "example": "MYROOM"
          },
          "participant_name": {
            "type": "string",
            "example": "USER1"
          },
          "participant_type": {
            "type": "string",
            "example": "PERFORMER | CONTROL | OUTPUT"
          },
          "passcode": {
            "type": "string",
            "example": "12345"
          }
        },
        "xml": {
          "name": "ValidatePasscodeRequest"
        }
      },
      "IncorrectPasscodeErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "error"
          },
          "error": {
            "type": "string",
            "example": "Incorrect passcode"
          }
        },
        "xml": {
          "name": "IncorrectPasscodeErrorResponse"
        }
      },
      "RoomNotExistErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "error"
          },
          "error": {
            "type": "string",
            "example": "Room does not exist"
          }
        },
        "xml": {
          "name": "RoomNotExistErrorResponse"
        }
      },
      "MaximumRoomErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "error"
          },
          "error": {
            "type": "string",
            "example": "Max 10 rooms allowed"
          }
        },
        "xml": {
          "name": "MaximumRoomErrorResponse"
        }
      },
      "InvalidRoomErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "error"
          },
          "error": {
            "type": "string",
            "example": "Invalid room name or passcode"
          }
        },
        "xml": {
          "name": "InvalidRoomErrorResponse"
        }
      }
    }
  }
}